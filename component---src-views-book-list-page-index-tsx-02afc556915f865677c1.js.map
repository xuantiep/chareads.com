{"version":3,"sources":["webpack:///./src/utils/tracking/index.ts","webpack:///./src/utils/graphql/normalize.ts","webpack:///./src/utils/hooks/useIsomorphicLayoutEffect.ts","webpack:///./src/utils/hooks/useScrollPosition.ts","webpack:///./src/components/InfiniteScroll/index.tsx","webpack:///./src/utils/tags/index.ts","webpack:///./src/utils/hooks/useClickOutside.ts","webpack:///./src/views/BookListPage/FilterTrigger.tsx","webpack:///./src/utils/hooks/useQueryParamSync.ts","webpack:///./src/views/BookListPage/index.tsx"],"names":["trackEvent","action","category","label","data","window","gtag","event_category","event_label","normalizeArray","query","edges","map","node","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","isBrowser","useScrollPosition","effect","wait","deps","element","throttleTimeout","callback","current","document","body","getBoundingClientRect","bottom","innerHeight","getScrollPosition","handleScroll","setTimeout","addEventListener","removeEventListener","InfiniteScroll","items","renderItem","anchorRef","createRef","useState","itemsToShow","setItemsToShow","length","pos","slice","ref","tagPrefixNames","type","genre","sub","splitTagByPrefix","tag","parts","split","join","splitTagsByPrefix","tags","resultMap","reduce","prev","prefix","value","name","unprefixed","push","Object","keys","filter","p","values","getTagsFromBooks","books","forEach","b","dedupedTags","Set","orderedTags","sortAlphabetically","startsWith","filterBooksByTags","filterType","filterGenre","filterSubject","ignorePrefix","filteredBooks","book","includes","useClickOutside","shouldWatch","onClickOut","useRef","handleClick","clientX","clientY","top","left","right","StyledWrapper","styled","span","StyledOptions","ol","COLOR","BACKGROUND_LIGHT","BORDER_RADIUS","M","BACKGROUND_DARK","SHADOW","S","StyledOption","li","FONT","SIZE","$default","FILTER_UNDERLINE_STYLE","StyledTrigger","FilterTrigger","defaultLabel","options","trackingCategory","onChange","isOpen","setIsOpen","wrapperElement","text","handleChange","newValue","undefined","optionsList","o","onClick","option","key","useQueryParamSync","pagePath","searchString","params","isInitialising","setIsInitialising","qs","parse","ignoreQueryPrefix","comma","setter","newQuery","newQueryString","stringify","addQueryPrefix","arrayFormat","encode","navigate","StyledDetails","GridItem","StyledBook","big","screenMin","m","StyledClearFilterButton","Link","BookListPage","bookData","location","setFilterType","setFilterGenre","setFilterSubject","isInitialisingFilter","PATHS","BOOKS","search","hasFilter","getOptions","optionBooks","Layout","navOpenOnDesktop","navTitle","title","Grid","as","full","spanFromM","spanFromL","rating7","id","spanRowsFromM","BookCard","featured"],"mappings":"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","file":"component---src-views-book-list-page-index-tsx-02afc556915f865677c1.js","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\n\nexport const trackEvent = (\n  action: string,\n  category: string,\n  label: string,\n  data?: object\n): void => {\n  if (!window.gtag) return\n\n  window.gtag('event', action, {\n    event_category: category,\n    event_label: label,\n    ...data,\n  })\n}\n","interface Query {\n  edges: {\n    node: object\n  }[]\n}\n\nexport const normalizeArray = (query: Query): object[] =>\n  query.edges.map((query) => query.node)\n","import { useEffect, useLayoutEffect } from 'react'\n\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect'\n\nconst isBrowser = typeof window !== `undefined`\n\nconst getScrollPosition = (\n  element: React.RefObject<React.ReactNode>\n): number => {\n  if (!isBrowser) return 0\n\n  const target = (element.current || document.body) as HTMLElement\n  return target.getBoundingClientRect().bottom - window.innerHeight\n}\n\nconst useScrollPosition = (\n  effect: (pos: number) => void,\n  wait: number,\n  deps: any[], // eslint-disable-line\n  element?: React.RefObject<React.ReactNode>\n): void => {\n  let throttleTimeout = null\n\n  const callback = (): void => {\n    effect(getScrollPosition(element))\n    throttleTimeout = null\n  }\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isBrowser) {\n      return\n    }\n\n    const handleScroll = (): void => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          throttleTimeout = setTimeout(callback, wait)\n        }\n      } else {\n        callback()\n      }\n    }\n\n    window.addEventListener('scroll', handleScroll)\n\n    return (): void => window.removeEventListener('scroll', handleScroll)\n  }, deps || [])\n}\n\nexport default useScrollPosition\n","import React, { useState, useLayoutEffect, createRef } from 'react'\n\nimport useScrollPosition from 'utils/hooks/useScrollPosition'\n\nconst SCROLL_BUFFER = 300\nconst INITIAL_COUNT = 24\nconst INCREMENT = 8\n\nconst isBrowser = typeof window !== `undefined`\n\ninterface Props {\n  items: object[]\n  renderItem: (item: object) => React.ReactNode\n}\n\nconst InfiniteScroll: React.FC<Props> = ({ items, renderItem }) => {\n  const anchorRef = createRef()\n  const [itemsToShow, setItemsToShow] = useState(INITIAL_COUNT)\n\n  useLayoutEffect(() => {\n    setItemsToShow(INITIAL_COUNT)\n  }, [items.length])\n\n  useScrollPosition(\n    (pos) => {\n      if (pos < 400 && itemsToShow < items.length)\n        setItemsToShow(itemsToShow + INCREMENT)\n    },\n    SCROLL_BUFFER,\n    [itemsToShow, items.length],\n    anchorRef\n  )\n\n  return (\n    <>\n      {items.slice(0, isBrowser ? itemsToShow : items.length).map(renderItem)}\n      <span ref={anchorRef as React.LegacyRef<HTMLSpanElement>} />\n    </>\n  )\n}\n\nexport default InfiniteScroll\n","import { sortAlphabetically } from 'utils/formatting/text'\n\nexport type TagPrefix = 'type' | 'genre' | 'sub'\n\nconst tagPrefixNames = {\n  type: 'Type',\n  genre: 'Genre',\n  sub: 'Subject',\n}\n\nexport interface BookWithTags {\n  tags: string[]\n}\n\nexport const splitTagByPrefix = (tag: string): [string, string, string] => {\n  const parts = tag.split('-')\n  return [parts[0], parts.slice(1).join('-'), tag]\n}\n\nexport const splitTagsByPrefix = (\n  tags: string[]\n): {\n  prefix: string\n  values: {\n    name: string\n    unprefixed: string\n  }[]\n}[] => {\n  const resultMap = tags\n    .map(splitTagByPrefix)\n    .reduce((prev, [prefix, name, unprefixed]) => {\n      const value = { name, unprefixed }\n      if (prev[prefix]) {\n        prev[prefix].push(value)\n      } else {\n        prev[prefix] = [value]\n      }\n      return prev\n    }, {})\n\n  return Object.keys(tagPrefixNames)\n    .filter((p) => resultMap[p])\n    .map((prefix) => ({\n      prefix: tagPrefixNames[prefix],\n      values: resultMap[prefix],\n    }))\n}\n\nexport const getTagsFromBooks = (\n  books: BookWithTags[],\n  prefix?: TagPrefix\n): string[] => {\n  const tags = []\n  books.forEach((b) => tags.push(...b.tags))\n  const dedupedTags = [...new Set(tags)]\n  const orderedTags = sortAlphabetically(dedupedTags)\n\n  if (!prefix) return orderedTags\n\n  return orderedTags\n    .filter((tag) => tag.startsWith(`${prefix}-`))\n    .map((tag) => tag.slice(prefix.length + 1))\n}\n\nexport const filterBooksByTags = (\n  books: BookWithTags[],\n  filterType?: string,\n  filterGenre?: string,\n  filterSubject?: string,\n  ignorePrefix?: TagPrefix\n): BookWithTags[] => {\n  let filteredBooks = books\n  if (filterType && ignorePrefix !== 'type')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`type-${filterType}`)\n    )\n  if (filterGenre && ignorePrefix !== 'genre')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`genre-${filterGenre}`)\n    )\n  if (filterSubject && ignorePrefix !== 'sub')\n    filteredBooks = filteredBooks.filter((book) =>\n      book.tags.includes(`sub-${filterSubject}`)\n    )\n\n  return filteredBooks\n}\n","import React, { useEffect, useRef } from 'react'\n\nconst useClickOutside = (\n  shouldWatch: boolean,\n  onClickOut: () => void\n): [React.MutableRefObject<undefined>] => {\n  const element = useRef()\n\n  const handleClick = ({ clientX, clientY }: MouseEvent): void => {\n    if (!element || !element.current) return\n\n    const { top, bottom, left, right } = element.current.getBoundingClientRect()\n\n    if (\n      clientX < left ||\n      clientX > right ||\n      clientY < top ||\n      clientY > bottom\n    ) {\n      onClickOut()\n    }\n  }\n\n  useEffect(() => {\n    if (shouldWatch) {\n      window.addEventListener('click', handleClick)\n    } else {\n      window.removeEventListener('click', handleClick)\n    }\n    return (): void => {\n      if (shouldWatch) window.removeEventListener('click', handleClick)\n    }\n  }, [shouldWatch])\n\n  return [element]\n}\n\nexport default useClickOutside\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  COLOR,\n  FONT,\n  BORDER_RADIUS,\n  FILTER_UNDERLINE_STYLE,\n} from 'styles/tokens'\nimport useClickOutside from 'utils/hooks/useClickOutside'\nimport { trackEvent } from 'utils/tracking'\n\nconst StyledWrapper = styled.span`\n  position: relative;\n  display: inline-block;\n`\n\nconst StyledOptions = styled.ol`\n  position: absolute;\n  background: ${COLOR.BACKGROUND_LIGHT};\n  border-radius: ${BORDER_RADIUS.M};\n  border: 1px solid ${COLOR.BACKGROUND_DARK};\n  box-shadow: 0 2px 8px ${COLOR.SHADOW}20;\n  min-width: 11em;\n  max-height: 20.5em;\n  top: -0.25rem;\n  left: -0.5rem;\n  margin: -1px; /* counteract border */\n  padding: 0 0 0.25rem;\n  z-index: 1;\n  line-height: 1.25;\n  overflow: auto;\n\n  ::-webkit-scrollbar {\n    width: 0.25em;\n    border-radius: 0 ${BORDER_RADIUS.S} ${BORDER_RADIUS.S} 0;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    background: ${COLOR.BACKGROUND_DARK};\n  }\n`\n\ninterface OptionProps {\n  $default?: boolean\n}\nconst StyledOption = styled.li<OptionProps>`\n  padding: 0.125rem 0.5rem;\n  font-size: ${FONT.SIZE.S};\n  cursor: pointer;\n  user-select: none;\n\n  ${({ $default }): string =>\n    $default &&\n    `\n    ${FILTER_UNDERLINE_STYLE};\n  `}\n\n  &:first-child {\n    ${FILTER_UNDERLINE_STYLE};\n    font-style: italic;\n    font-size: ${FONT.SIZE.M};\n    padding: 0.25rem 0.5rem;\n    line-height: 1.5;\n  }\n\n  &:nth-child(n + 2):hover {\n    background: ${COLOR.SHADOW}10;\n  }\n`\n\nconst StyledTrigger = styled.span`\n  ${FILTER_UNDERLINE_STYLE};\n  font-style: italic;\n  cursor: pointer;\n  user-select: none;\n`\n\ninterface Props {\n  value?: string\n  defaultLabel: string\n  options: string[]\n  trackingCategory: string\n  onChange: (value: string | string[]) => void\n}\n\nconst FilterTrigger: React.FC<Props> = ({\n  value,\n  defaultLabel,\n  options,\n  trackingCategory,\n  onChange,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [wrapperElement] = useClickOutside(isOpen, () => setIsOpen(false))\n  const text = value || defaultLabel\n\n  const handleChange = (newValue: string): void => {\n    setIsOpen(false)\n\n    if (!newValue) return onChange(undefined)\n\n    trackEvent('book-filter', trackingCategory, newValue)\n    return onChange(newValue)\n  }\n\n  const optionsList = value ? options.filter((o) => o !== value) : options\n  if (!optionsList || optionsList.length === 0)\n    return <>{value || defaultLabel}</>\n\n  return (\n    <StyledWrapper ref={wrapperElement}>\n      <StyledTrigger onClick={(): void => setIsOpen(!isOpen)}>\n        {text}\n      </StyledTrigger>\n\n      {isOpen && (\n        <StyledOptions>\n          <StyledOption onClick={(): void => setIsOpen(false)}>\n            {text}\n          </StyledOption>\n          {defaultLabel !== text && (\n            <StyledOption\n              onClick={(): void => handleChange(undefined)}\n              $default\n            >\n              {defaultLabel}\n            </StyledOption>\n          )}\n          {optionsList.map((option) => (\n            <StyledOption\n              key={option}\n              onClick={(): void => handleChange(option)}\n            >\n              {option}\n            </StyledOption>\n          ))}\n        </StyledOptions>\n      )}\n    </StyledWrapper>\n  )\n}\n\nexport default FilterTrigger\n","import React, { useState, useEffect } from 'react'\nimport { navigate } from '@reach/router'\nimport qs from 'qs'\n\ninterface Param {\n  key: string\n  value?: string\n  setter: React.Dispatch<string>\n}\n\nconst useQueryParamSync = (\n  pagePath: string,\n  searchString: string,\n  params: Param[]\n): [boolean] => {\n  const [isInitialising, setIsInitialising] = useState(true)\n\n  const query = qs.parse(searchString, {\n    ignoreQueryPrefix: true,\n    comma: true,\n  })\n\n  useEffect(() => {\n    params.forEach(({ setter, key }) => {\n      setter(query[key] as string)\n    })\n    setIsInitialising(false)\n  }, [])\n\n  // update values to match query\n  useEffect(() => {\n    params.forEach(({ key, value, setter }) => {\n      if (query[key] !== value) {\n        setter(query[key] as string)\n      }\n    })\n  }, [searchString])\n\n  // update query to match values\n  useEffect(\n    () => {\n      // only after initialisation so it doesn't reset query before initial filtering\n      if (!isInitialising) {\n        const newQuery = {}\n        params.forEach(({ key, value }) => {\n          newQuery[key] = value\n        })\n\n        const newQueryString = qs.stringify(newQuery, {\n          addQueryPrefix: true,\n          arrayFormat: 'comma',\n          encode: false,\n        })\n\n        if (newQueryString !== searchString) {\n          navigate(`${pagePath}${newQueryString}`)\n        }\n      }\n    },\n    params.map(({ value }) => value)\n  )\n\n  return [isInitialising]\n}\n\nexport default useQueryParamSync\n","import React, { useState } from 'react'\nimport { graphql } from 'gatsby'\nimport styled, { SimpleInterpolation } from 'styled-components'\n\nimport { PageProps } from 'types/page'\nimport { normalizeArray } from 'utils/graphql/normalize'\nimport Layout from 'Layout'\nimport { BookCardType } from 'types/book'\nimport { COLOR, FONT } from 'styles/tokens'\nimport { screenMin } from 'styles/responsive'\nimport Link from 'components/links/Link'\nimport BookCard from 'components/cards/BookCard'\nimport Grid from 'components/Grid'\nimport GridItem from 'components/Grid/GridItem'\nimport InfiniteScroll from 'components/InfiniteScroll'\nimport { getTagsFromBooks, filterBooksByTags, TagPrefix } from 'utils/tags'\nimport FilterTrigger from './FilterTrigger'\nimport PATHS from 'routes/paths'\nimport useQueryParamSync from 'utils/hooks/useQueryParamSync'\n\ninterface BookProps {\n  big: boolean\n}\n\nconst StyledDetails = styled(GridItem)`\n  background: ${COLOR.BACKGROUND_LIGHT};\n  padding: 1em;\n`\n\nconst StyledBook = styled(GridItem)<BookProps>`\n  ${({ big }): SimpleInterpolation => screenMin.m`\n    font-size: ${big ? '1.25em' : FONT.SIZE.S};\n  `}\n`\n\nconst StyledClearFilterButton = styled(Link)`\n  font-size: 0.75em;\n`\n\ninterface BookCardTypeWithTags extends BookCardType {\n  tags: string[]\n}\n\ninterface Props extends PageProps {\n  data: {\n    bookData: {\n      edges: {\n        node: BookCardTypeWithTags\n      }[]\n    }\n  }\n}\n\nconst BookListPage: React.FC<Props> = ({ data: { bookData }, location }) => {\n  const books = normalizeArray(bookData) as BookCardTypeWithTags[]\n\n  const [filterType, setFilterType] = useState(undefined)\n  const [filterGenre, setFilterGenre] = useState(undefined)\n  const [filterSubject, setFilterSubject] = useState(undefined)\n\n  const [isInitialisingFilter] = useQueryParamSync(\n    PATHS.BOOKS,\n    location.search,\n    [\n      {\n        key: 'type',\n        value: filterType,\n        setter: setFilterType,\n      },\n      {\n        key: 'genre',\n        value: filterGenre,\n        setter: setFilterGenre,\n      },\n      {\n        key: 'sub',\n        value: filterSubject,\n        setter: setFilterSubject,\n      },\n    ]\n  )\n\n  const filteredBooks = filterBooksByTags(\n    books,\n    filterType,\n    filterGenre,\n    filterSubject\n  )\n\n  const hasFilter = filterType || filterGenre || filterSubject\n\n  const getOptions = (prefix: TagPrefix): string[] => {\n    const optionBooks = hasFilter\n      ? filterBooksByTags(books, filterType, filterGenre, filterSubject, prefix)\n      : books\n    return getTagsFromBooks(optionBooks, prefix)\n  }\n\n  return (\n    <Layout\n      location={location}\n      navOpenOnDesktop\n      navTitle=\"Book reviews\"\n      title=\"Book reviews\"\n    >\n      {(!isInitialisingFilter || location.search === '') && (\n        <Grid as=\"ol\" full>\n          <StyledDetails span={2} spanFromM={6} spanFromL={4}>\n            <p>\n              Showing {filteredBooks.length} {}\n              {filteredBooks.length === 1 ? 'book' : 'books'}\n              <br />\n              <FilterTrigger\n                value={filterType}\n                defaultLabel=\"fiction and non-fiction\"\n                options={getOptions('type')}\n                trackingCategory=\"type\"\n                onChange={setFilterType}\n              />\n              <br />\n              in {}\n              <FilterTrigger\n                value={filterGenre}\n                defaultLabel=\"any genre\"\n                options={getOptions('genre')}\n                trackingCategory=\"genre\"\n                onChange={setFilterGenre}\n              />\n              <br />\n              about {}\n              <FilterTrigger\n                value={filterSubject}\n                defaultLabel=\"any subject\"\n                options={getOptions('sub')}\n                trackingCategory=\"sub\"\n                onChange={setFilterSubject}\n              />\n              {hasFilter && (\n                <>\n                  <br />\n                  <StyledClearFilterButton\n                    as=\"button\"\n                    onClick={(): void => {\n                      setFilterType(undefined)\n                      setFilterGenre(undefined)\n                      setFilterSubject(undefined)\n                    }}\n                  >\n                    clear filter\n                  </StyledClearFilterButton>\n                </>\n              )}\n            </p>\n          </StyledDetails>\n\n          <InfiniteScroll\n            items={filteredBooks}\n            renderItem={(book: BookCardType): React.ReactNode => {\n              const big = book.rating7 >= 6\n              return (\n                <StyledBook\n                  big={big}\n                  as=\"li\"\n                  key={book.id}\n                  span={1}\n                  spanFromM={big ? 6 : 3}\n                  spanFromL={big ? 4 : 2}\n                  spanRowsFromM={big ? 2 : 1}\n                >\n                  <BookCard book={book} featured={big} big={big} />\n                </StyledBook>\n              )\n            }}\n          />\n        </Grid>\n      )}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query BookListPage {\n    bookData: allBook(sort: { fields: sortingDate, order: DESC }) {\n      edges {\n        node {\n          ...BookCardFields\n          tags\n        }\n      }\n    }\n  }\n`\n\nexport default BookListPage\n"],"sourceRoot":""}